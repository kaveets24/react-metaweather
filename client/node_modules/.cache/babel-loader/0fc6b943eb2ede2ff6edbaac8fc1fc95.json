{"ast":null,"code":"var _jsxFileName = \"/Users/steven/Documents/Code/Interviews/Go Nimbly/go-nimbly/client/src/components/Weather/index.js\";\nimport React from \"react\"; // css\n\nimport \"./style.scss\";\n\nconst convertTemp = temp => {\n  return Math.round(temp * (9 / 5) + 32);\n};\n\nconst Weather = props => {\n  let tableBody;\n  let showWeatherClassName = \"weather--hidden\";\n\n  if (props.weather && props.weather.length) {\n    showWeatherClassName = \"\";\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let tableRows = props.weather.map(weather => {\n      // Return day as a string instead of an int.\n      let day = new Date(weather.applicable_date);\n      let dayString = days[day.getDay()];\n      let low = convertTemp(weather.min_temp);\n      let high = convertTemp(weather.max_temp);\n      let currentTemp = convertTemp(weather.the_temp);\n      return React.createElement(\"tr\", {\n        key: weather.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, dayString), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, currentTemp), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, weather.weather_state_name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, low, \" \\u2109\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, high, \" \\u2109\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, weather.humidity, \" %\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, Math.round(weather.wind_speed)));\n    });\n    tableBody = React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, tableRows);\n  }\n\n  let loadingClassName = props.weather.loading ? \"\" : \"loading--hidden\";\n  return React.createElement(\"div\", {\n    className: \"weather \".concat(showWeatherClassName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"loading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Day\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Temp\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Condition\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Low\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"High\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Humidity\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Wind Speed\"))), tableBody));\n};\n\nexport default Weather;","map":{"version":3,"sources":["/Users/steven/Documents/Code/Interviews/Go Nimbly/go-nimbly/client/src/components/Weather/index.js"],"names":["React","convertTemp","temp","Math","round","Weather","props","tableBody","showWeatherClassName","weather","length","days","tableRows","map","day","Date","applicable_date","dayString","getDay","low","min_temp","high","max_temp","currentTemp","the_temp","id","weather_state_name","humidity","wind_speed","loadingClassName","loading"],"mappings":"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","sourcesContent":["import React from \"react\";\n// css\nimport \"./style.scss\";\n\nconst convertTemp = temp => {\n  return Math.round(temp * (9 / 5) + 32);\n};\n\n\n\nconst Weather = props => {\n  let tableBody;\n  let showWeatherClassName = \"weather--hidden\";\n\n  if (props.weather && props.weather.length) {\n    showWeatherClassName = \"\";\n\n    let days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ];\n    let tableRows = props.weather.map(weather => {\n      // Return day as a string instead of an int.\n      let day = new Date(weather.applicable_date);\n      let dayString = days[day.getDay()];\n      let low = convertTemp(weather.min_temp);\n      let high = convertTemp(weather.max_temp);\n      let currentTemp = convertTemp(weather.the_temp)\n\n      return (\n        <tr key={weather.id}>\n          <td>{dayString}</td>\n          <td>{currentTemp}</td>\n          <td>{weather.weather_state_name}</td>\n          <td>{low} ℉</td>\n          <td>{high} ℉</td>\n          <td>{weather.humidity} %</td>\n          <td>{Math.round(weather.wind_speed)}</td>\n\n        </tr>\n      );\n    });\n\n    tableBody = <tbody>{tableRows}</tbody>;\n    \n  } \n  let loadingClassName = props.weather.loading ? \"\": \"loading--hidden\"\n\n\n  return (\n    <div className={`weather ${showWeatherClassName}`}>\n      <div className={\"loading\"} ></div>\n      <table>\n        <thead>\n          <tr>\n            <th>Day</th>\n            <th>Temp</th>\n            <th>Condition</th>\n            <th>Low</th>\n            <th>High</th>\n            <th>Humidity</th>\n            <th>Wind Speed</th>\n          </tr>\n        </thead>\n        {tableBody}\n      </table>\n    </div>\n  );\n};\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}