{"ast":null,"code":"import axios from \"axios\";\nimport { rootUrl } from \"../../utils\";\n\nclass MetaWeather {\n  constructor() {\n    this.getLocation = async query => {\n      let res = await axios.get(\"\".concat(rootUrl, \"/api/location/search/\").concat(query));\n\n      if (res.data) {\n        this.state.woeid = res.data[0].woeid;\n        let locationRes = await axios.get(\"\".concat(rootUrl, \"/api/location/\").concat(this.state.woeid));\n        this.state.consolidatedWeather = locationRes.data.consolidated_weather;\n        return this.state.consolidatedWeather;\n      }\n    };\n\n    this.state = {\n      woeid: null,\n      consolidatedWeather: null\n    };\n  }\n\n}\n\nconst MW = new MetaWeather();\nexport { MW as MetaWeather };","map":{"version":3,"sources":["/Users/steven/Documents/Code/Interviews/Go Nimbly/go-nimbly/client/src/api/metaweather/index.js"],"names":["axios","rootUrl","MetaWeather","constructor","getLocation","query","res","get","data","state","woeid","locationRes","consolidatedWeather","consolidated_weather","MW"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,WAAW,GAAG;AAAA,SAOdC,WAPc,GAOA,MAAMC,KAAN,IAAe;AAC3B,UAAIC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,WAAaN,OAAb,kCAA4CI,KAA5C,EAAhB;;AAEA,UAAIC,GAAG,CAACE,IAAR,EAAc;AACZ,aAAKC,KAAL,CAAWC,KAAX,GAAmBJ,GAAG,CAACE,IAAJ,CAAS,CAAT,EAAYE,KAA/B;AACA,YAAIC,WAAW,GAAG,MAAMX,KAAK,CAACO,GAAN,WAAaN,OAAb,2BAAqC,KAAKQ,KAAL,CAAWC,KAAhD,EAAxB;AACA,aAAKD,KAAL,CAAWG,mBAAX,GAAiCD,WAAW,CAACH,IAAZ,CAAiBK,oBAAlD;AACA,eAAO,KAAKJ,KAAL,CAAWG,mBAAlB;AACD;AACJ,KAhBe;;AACZ,SAAKH,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXE,MAAAA,mBAAmB,EAAE;AAFV,KAAb;AAID;;AANe;;AAmBlB,MAAME,EAAE,GAAG,IAAIZ,WAAJ,EAAX;AACA,SAAQY,EAAE,IAAIZ,WAAd","sourcesContent":["import axios from \"axios\";\nimport { rootUrl } from \"../../utils\";\n\nclass MetaWeather {\n  constructor() {\n    this.state = {\n      woeid: null,\n      consolidatedWeather: null\n    };\n  }\n\n  getLocation = async query => {\n    let res = await axios.get(`${rootUrl}/api/location/search/${query}`)\n\n    if (res.data) {\n      this.state.woeid = res.data[0].woeid;\n      let locationRes = await axios.get(`${rootUrl}/api/location/${this.state.woeid}`);\n      this.state.consolidatedWeather = locationRes.data.consolidated_weather;\n      return this.state.consolidatedWeather;\n    }\n}\n}\nconst MW = new MetaWeather();\nexport {MW as MetaWeather};\n\n"]},"metadata":{},"sourceType":"module"}