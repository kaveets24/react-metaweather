{"ast":null,"code":"import _defineProperty from \"/Users/steven/Documents/Code/Interviews/Go Nimbly/go-nimbly/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/steven/Documents/Code/Interviews/Go Nimbly/go-nimbly/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from \"react\";\n\nconst useForm = callback => {\n  const _useState = useState({\n    location: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        inputs = _useState2[0],\n        setInputs = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        weather = _useState4[0],\n        setWeather = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        location = _useState6[0],\n        setLocation = _useState6[1];\n\n  const handleSubmit = async e => {\n    if (e) {\n      e.preventDefault();\n    }\n\n    setWeather({\n      waiting: true\n    });\n    const res = await callback(inputs.location);\n    setWeather(res);\n    setLocation(inputs.location);\n  };\n\n  const handleInputChange = e => {\n    e.persist();\n    setInputs(inputs => _objectSpread({}, inputs, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return {\n    handleSubmit,\n    handleInputChange,\n    weather,\n    location,\n    inputs\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["/Users/steven/Documents/Code/Interviews/Go Nimbly/go-nimbly/client/src/hooks/index.js"],"names":["useState","useForm","callback","location","inputs","setInputs","weather","setWeather","setLocation","handleSubmit","e","preventDefault","waiting","res","handleInputChange","persist","target","name","value"],"mappings":";;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,OAAO,GAAIC,QAAD,IAAc;AAAA,oBACEF,QAAQ,CAAC;AAACG,IAAAA,QAAQ,EAAE;AAAX,GAAD,CADV;AAAA;AAAA,QACnBC,MADmB;AAAA,QACXC,SADW;;AAAA,qBAEIL,QAAQ,CAAC,EAAD,CAFZ;AAAA;AAAA,QAEnBM,OAFmB;AAAA,QAEVC,UAFU;;AAAA,qBAGOP,QAAQ,CAAC,IAAD,CAHf;AAAA;AAAA,QAGnBG,QAHmB;AAAA,QAGTK,WAHS;;AAO1B,QAAMC,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9B,QAAIA,CAAJ,EAAO;AACHA,MAAAA,CAAC,CAACC,cAAF;AACH;;AACDJ,IAAAA,UAAU,CAAC;AAACK,MAAAA,OAAO,EAAE;AAAV,KAAD,CAAV;AACA,UAAMC,GAAG,GAAG,MAAMX,QAAQ,CAACE,MAAM,CAACD,QAAR,CAA1B;AACAI,IAAAA,UAAU,CAACM,GAAD,CAAV;AACAL,IAAAA,WAAW,CAACJ,MAAM,CAACD,QAAR,CAAX;AAEH,GATD;;AAWA,QAAMW,iBAAiB,GAAIJ,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACK,OAAF;AACAV,IAAAA,SAAS,CAACD,MAAM,sBAASA,MAAT;AAAiB,OAACM,CAAC,CAACM,MAAF,CAASC,IAAV,GAAiBP,CAAC,CAACM,MAAF,CAASE;AAA3C,MAAP,CAAT;AAEH,GAJD;;AAKA,SAAO;AAAET,IAAAA,YAAF;AACPK,IAAAA,iBADO;AAEPR,IAAAA,OAFO;AAGPH,IAAAA,QAHO;AAIPC,IAAAA;AAJO,GAAP;AAKH,CA5BD;;AA8BA,eAAeH,OAAf","sourcesContent":["import { useState } from \"react\";\n\nconst useForm = (callback) => {\n    const [inputs, setInputs] = useState({location: \"\"});\n    const [weather, setWeather] = useState([]);\n    const [location, setLocation ] = useState(null);\n\n\n\n    const handleSubmit = async (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n        setWeather({waiting: true});\n        const res = await callback(inputs.location);\n        setWeather(res);\n        setLocation(inputs.location);\n\n    }\n\n    const handleInputChange = (e) => {\n        e.persist();\n        setInputs(inputs => ({...inputs, [e.target.name]: e.target.value})\n        )\n    }\n    return { handleSubmit,\n    handleInputChange,\n    weather,\n    location,\n    inputs };\n};\n\nexport default useForm;"]},"metadata":{},"sourceType":"module"}